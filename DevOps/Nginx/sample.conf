#  Load Balancing in Nginx

# ----------------------------------------------------------------------------------------------------------------
server{
        server_name video-call.atomicloops.app;
        client_max_body_size 100M;
        location / {
                proxy_set_header Host $http_host;
                # setting custom header that will be send to server in order to better understanding of request
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_pass http://node-server-video-call:3000;
        }
        
    location /socket.io {
        proxy_pass http://node-server-video-call:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # location ~* ^/(100[0-9]{2}|101[0-9]{2}|10200)/ {
    #     proxy_pass http://node-server-video-call:$1;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    # }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/video-call.atomicloops.app/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/video-call.atomicloops.app/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}server{
    if ($host = video-call.atomicloops.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name video-call.atomicloops.app;
    listen 80;
    return 404; # managed by Certbot


}